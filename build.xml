<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="indiAssLeave">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    
         <!-- Variable-->
    <property name="build.dir" location="bin"/>
    <property name="dist.dir" location="dist"/>
    <property name="docs.dir" location="docs"/>
    <property name="src.dir" location="src"/>
    
    
    <path id="indiAssLeave.classpath">
        <pathelement location="bin"/>
        <pathelement location="jdatepicker-1.3.2.jar"/>
    </path>
  
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
        <!-- Clean -->
    
    <target name="clean">
             <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${docs.dir}"/>
    </target>
    
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="indiAssLeave.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="LeaveApplication (1)">
        <java classname="Domain.LeaveApplication" failonerror="true" fork="yes">
            <classpath refid="indiAssLeave.classpath"/>
        </java>
    </target>
    <target name="LeaveApplication (2)">
        <java classname="LeaveApplication" failonerror="true" fork="yes">
            <classpath refid="indiAssLeave.classpath"/>
        </java>
    </target>
    <target name="Main">
        <java classname="Domain.Main" failonerror="true" fork="yes">
            <classpath refid="indiAssLeave.classpath"/>
        </java>
    </target>
    
      <!-- Creates Javadoc -->
    <target name="docs" depends="build-project">
        <javadoc packagenames="src" sourcepath="{src.dir}" destdir="${docs.dir}">
            <!-- Define which files/directory should get included, we include all -->
            <fileset dir="${src.dir}">
                <include name="**"/>
            </fileset>         
        </javadoc>       
    </target>
    
    <!-- Creates the deployable jar file -->
    <target name="jar" depends="build-project">
        <jar destfile="${dist.dir}/leaveApplication.jar" basedir="${build.dir}">
            <manifest>
                <attribute name="Main-Class" value="Domain.Main"/>        
            </manifest>
        </jar>
    </target>
</project>
